services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - integration-network
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q 'SELECT 1' -C" ]
      interval: 5s
      timeout: 5s
      retries: 2
    env_file:
      - compose.env

  mssqltools:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./scripts/sqlserver/init.sql:/tmp/init.sql
    command: /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Your_password123 -d master -i /tmp/init.sql
    networks:
      - integration-network
    env_file:
      - compose.env

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Destino
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./scripts/postgresql:/docker-entrypoint-initdb.d
    networks:
      - integration-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  sql_data:
  pg_data:

networks:
  integration-network:
    driver: bridge
